/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.prog2.listemployee;

import com.prog2.Entities.DataHandling;
import com.prog2.Entities.Department;
import com.prog2.Entities.ParttimeTeacher;
import com.prog2.Entities.Staff;
import com.prog2.Entities.Teacher;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wei Jin
 */
public class ListEmployeePanel extends javax.swing.JPanel {

    DefaultTableModel model;
    /**
     * Creates new form NewEmployeePanel
     */
    public ListEmployeePanel() {
        initComponents();
        DataHandling.Load();
        updateList(DataHandling.getDepartmentList());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JTable();

        listTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Dept ID", "Dept Name", "Emp ID", "SIN", "Last Name", "First Name", "Gender", "DOB", "Specialty", "Degree", "Duty", "HoursWorked", "Dean"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(listTable);
        if (listTable.getColumnModel().getColumnCount() > 0) {
            listTable.getColumnModel().getColumn(0).setMaxWidth(50);
            listTable.getColumnModel().getColumn(1).setMinWidth(130);
            listTable.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 954, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void updateList(ArrayList<Department> list)
    {        
        model = (DefaultTableModel)listTable.getModel();
        model.setRowCount(0);
        for(int i = 0; i < list.size(); i++){
            
            for(Teacher teacher : list.get(i).getListTeachers()){
                if(teacher.getCategory() == 1){//FullTime
                    model.insertRow(model.getRowCount(), new Object[]{
                        list.get(i).getDepNo(), 
                        list.get(i).getDepName(),
                        teacher.getId(),
                        teacher.getSin(),
                        teacher.getLastName(),
                        teacher.getFirstName(),
                        teacher.getGenderString(),
                        teacher.getDOB().toString(),
                        teacher.getSpecialty(),
                        teacher.getDegree(),
                        "-",
                        0,
                        teacher.getDean()
                    });
                }else{
                    ParttimeTeacher parttimeTeacher = (ParttimeTeacher) teacher;
                    model.insertRow(model.getRowCount(), new Object[]{
                        list.get(i).getDepNo(), 
                        list.get(i).getDepName(),
                        teacher.getId(),
                        parttimeTeacher.getSin(),
                        parttimeTeacher.getLastName(),
                        parttimeTeacher.getFirstName(),
                        parttimeTeacher.getGenderString(),
                        parttimeTeacher.getDOB().toString(),
                        parttimeTeacher.getSpecialty(),
                        parttimeTeacher.getDegree(),
                        "-",
                        parttimeTeacher.getHours(),
                        parttimeTeacher.getDean()
                    });
                } 
            }
            
            for(Staff staff : list.get(i).getListStaff()){
                model.insertRow(model.getRowCount(), new Object[]{
                    
                    list.get(i).getDepNo(),
                    list.get(i).getDepName(),
                    staff.getId(),
                    staff.getSin(),
                    staff.getLastName(),
                    staff.getFirstName(),
                    staff.getGenderString(),
                    staff.getDOB().toString(),
                    "-",
                    "-",
                    staff.getDuty(),
                    staff.getWorkload(),
                    "-"
            });
            }              
        }
    }
    
    public JTable getTableObj(){
        return listTable;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listTable;
    // End of variables declaration//GEN-END:variables
}
